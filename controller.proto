syntax = "proto3";

option optimize_for = LITE_RUNTIME;
option cc_enable_arenas = false;

package controller;
option go_package = "DevKit-Neuro-server/proto/controller";

message ChannelsDataSet{
  double channel1 = 1;
  double channel2 = 2;
  double channel3 = 3;
  double channel4 = 4;
  double channel5 = 5;
  double channel6 = 6;
  double channel7 = 7;
  double channel8 = 8;
  uint64 id = 9;
}

message RawDataPack{
  repeated ChannelsDataSet data_mes = 1;
}

message EmgMetric{
  ChannelsDataSet metrics = 1;
}
// Алгоритм используемый для проверки контрольной внутреннего сообщения и не только)
enum CRCType{
  nothing = 0;
  crc16 = 1;
  crc32 = 2;
}
// Тип сообщение передающееся внутри другого(бинарно)
enum MessageType{
  channelsDataSet = 0;
  rawDataPack = 1;
  emgMetric = 2;
}

message MessageWitchCRC{
  bytes msg = 1;
  CRCType kind = 2;
  int64 crc = 3;
  MessageType massage = 4; // Да я не знал как назвать, поэтому решил по угару назвать massage. Это просто мемный прикол
} 

/*
message RawDataPackWithCRC{
  repeated RawDataPack raw_data_pack = 1;
  int64 crc32 = 2;
}

message EmgMetricWithCRC{
  repeated EmgMetric emg_metric = 1;
  int64 crc32 = 2;
}*/

